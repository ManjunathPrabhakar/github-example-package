# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Analyze with SonarCloud
      run:  mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=devopsnishu_github-example-package
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    -  name: API with curl
       run: |  
            curl -u ${{ secrets.SONAR_TOKEN }}${{ secrets.SONAR_HOST_URL }}/api/measures/component_measures?metric=Coverage,code_smells,vulnerabilities&id=devopsnishu_github-example-package
              if ["$metric"== "Coverage"],
              then
                if[$(value) -lt "Coverage"],
                 then 
                  echo "sonar-coverage check :fail"
                else
                 echo "sonar-coverage check :pass"
               else
                echo "coverage"
               fi 
    - name: Test with Maven
      run: mvn -B test --file pom.xml
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Java-jar
        path: |
          src/target/*.jar
          src/target/*.zip

    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/java
          
    -
       name: Build and push
       uses: docker/build-push-action@v2
       with:
        context: .
        dockerfile: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  
        
